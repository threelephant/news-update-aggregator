version: '3.8'

networks:
  mynetwork:
    driver: bridge

services:
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: "rabbitmq"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - mynetwork

  postgres:
    image: "postgres:13"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname
    ports:
      - "5432:5432"
    networks:
      - mynetwork

  user-service:
    build:
      context: ./User Service
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    depends_on:
      - rabbitmq
      - postgres
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/dbname
      - RABBITMQ_URL=rabbitmq
    networks:
      - mynetwork

  news-aggregator-service:
    build:
      context: ./News Aggregator Service
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_URL=rabbitmq
    networks:
      - mynetwork

  ai-processing-service:
    build:
      context: ./AI Processing Service
      dockerfile: Dockerfile
    ports:
      - "5003:5003"
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
    links:
      - rabbitmq
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    networks:
      - mynetwork

  notification-service:
    build:
      context: ./Notification Service
      dockerfile: Dockerfile
    ports:
      - "5004:5004"
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/

  news-frontend:
    build: ./news-frontend
    ports:
      - "3000:80"
    networks:
      - mynetwork
